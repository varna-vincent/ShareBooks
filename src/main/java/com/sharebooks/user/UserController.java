package com.sharebooks.user;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/users") // This means URL's start with /demo (after Application path)
public class UserController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @PostMapping(path="/register") // Map ONLY GET Requests
    public @ResponseBody String register (@RequestParam String name, @RequestParam String email, @RequestParam String password) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        try {
            User user = new User();
            user.setName(name);
            user.setEmail(email);
            user.setPassword(password);
            userRepository.save(user);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        return "signin";
    }

    @PostMapping(path="/login") // Map ONLY GET Requests
    public @ResponseBody String login (@RequestParam String email, @RequestParam String password) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        try {
            User user =  userRepository.findByEmail(email);
            if(user == null) {

            } else if(user.getPassword().equals(password)) {

            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        return "signin";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        System.out.println(userRepository);
        return userRepository.findAll();

    }

    @GetMapping("/signin")
    public String home() {
        return "signin";
    }
}
